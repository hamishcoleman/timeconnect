#!/usr/bin/perl -w
use warnings;
use strict;
#
# Attempt a connection to a remote host and time the response
#

use Socket;
use FileHandle;
use Time::HiRes;
use Getopt::Long;
use Pod::Usage;


my %options=();
my $count = 1; 
my $iteration = 1;
my $interval = 1;
GetOptions(\%options,
	"help|h|?",
	"man",
	"count|c=i",
	"interval|i=i"
) or pod2usage(2);
pod2usage(-exitstatus => 0, -verbose => 1) if defined $options{help}; 
pod2usage(-exitstatus => 0, -verbose => 2) if defined $options{man};
pod2usage(-exitstatus => 0, -verbose => 0) if !defined $ARGV[0];

$count = $options{count} if defined $options{count};
$interval = $options{interval} if defined $options{interval};


my ($rem_host, $rem_port) = ($ARGV[0], $ARGV[1]);

$| = 1;

$rem_host || die "Remote host not supplied";
$rem_port || die "Remote port not supplied";


my $iaddr = inet_aton($rem_host);
my $paddr = sockaddr_in($rem_port, $iaddr);
my $proto = getprotobyname('tcp');
my $fh    = FileHandle->new;

sub checkconnect{
	my $time1 = Time::HiRes::time;
	if (!socket($fh, PF_INET, SOCK_STREAM, $proto)) {
	die "socket error";
	}
	if (!connect($fh, $paddr)) {
		die "connect error";
	}
	$fh->autoflush(1);
	my $elapsed = Time::HiRes::time - $time1;
	my $milliseconds = $elapsed*1000;
	print "". localtime time, ' ',
		$rem_host, ':', $rem_port, "\t",
		inet_ntoa($iaddr), "\t";
	printf '%.2f', $milliseconds;
	print " ms\n";

## Stanza for seconds instead of milliseconds
#	print "". localtime time, ' ',
#		$rem_host, ':', $rem_port, "\t",
#		inet_ntoa($iaddr), "\t";
#	printf '%.4f', $elapsed;
#	print " seconds\n";
	
	# easily allow only one probe per second
	# last iteration of a limited run should not delay return to prompt
	if ($iteration < $count || !defined $options{count} ){
		if ($elapsed < $interval) {
			Time::HiRes::sleep($interval-$elapsed);
		}
	};
	return;
}


while ($iteration <= $count){
	checkconnect();
	if(defined($options{count})){
		$iteration++;

	};

};


0;
__END__
=head1 NAME

timeconnect - times connections to TCP socket

=head1 SYNOPSIS

timeconnect [--help] [--man] [--count XX] [--interval XX] destination port

timeconnect [-h] [-c XX] [-i XX] destination port

timeconnect -c 20 192.168.1.1 80

timeconnect www.101spares.com 80

=head1 DESCRIPTION

Timeconnect attempts a tcp connection to the given destination and times the
response. The destination can be in the form of an IP address or an FQDN

Timeconnect will not attempt more than once per second

=head1 ARGUMENTS

Timeconnect takes the following arguments:

=over 4

=item B<--count, -c> Repeats the connection test for COUNT attempts. If this value is not specified, timeconnect will run continuously

=item B<--help, -h>	Displays the usage message

=item B<--interval, -i>	Sets the interval in seconds between connection tests. If this value is not specified, timeconnect will default to an interval of 1.

=back

=head1 AUTHOR

Hamish Coleman (meat) and Paul Morahan (potatoes)


=cut



